#!/bin/bash
CONFLUENT_HOME="/engn/confluent"
PROPERTIES_FILE="${CONFLUENT_HOME}/properties/control-center.properties"
DATA_DIR="/data/control-center"
LOG_DIR="/log/control-center"
export LOG_DIR
### java home
export JAVA_HOME="/home/ubuntu/jdk-17.0.8+7"
### memory options
CONTROL_CENTER_HEAP_OPTS="${CONTROL_CENTER_HEAP_OPTS} -Xms4G -Xmx4G"
export CONTROL_CENTER_HEAP_OPTS
### performance
CONTROL_CENTER_JVM_PERFORMANCE_OPTS="${CONTROL_CENTER_JVM_PERFORMANCE_OPTS} -server"
CONTROL_CENTER_JVM_PERFORMANCE_OPTS="${CONTROL_CENTER_JVM_PERFORMANCE_OPTS} -XX:MetaspaceSize=96m"
CONTROL_CENTER_JVM_PERFORMANCE_OPTS="${CONTROL_CENTER_JVM_PERFORMANCE_OPTS} -XX:+UseG1GC"
CONTROL_CENTER_JVM_PERFORMANCE_OPTS="${CONTROL_CENTER_JVM_PERFORMANCE_OPTS} -XX:MaxGCPauseMillis=20"
CONTROL_CENTER_JVM_PERFORMANCE_OPTS="${CONTROL_CENTER_JVM_PERFORMANCE_OPTS} -XX:InitiatingHeapOccupancyPercent=35"
CONTROL_CENTER_JVM_PERFORMANCE_OPTS="${CONTROL_CENTER_JVM_PERFORMANCE_OPTS} -XX:G1HeapRegionSize=16M"
CONTROL_CENTER_JVM_PERFORMANCE_OPTS="${CONTROL_CENTER_JVM_PERFORMANCE_OPTS} -XX:MinMetaspaceFreeRatio=50"
export CONTROL_CENTER_JVM_PERFORMANCE_OPTS
### generic jvm settings
CONTROL_CENTER_OPTS="${CONTROL_CENTER_OPTS} -D{{server_name}}"
export CONTROL_CENTER_OPTS
### gc option
export GC_LOG_ENABLED="true"
### JMX 설정
export KAFKA_JMX_OPTS="-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false"
export CONTROL_CENTER_JMX_OPTS
### log4j
CONTROL_CENTER_LOG4J_OPTS="${CONTROL_CENTER_LOG4J_OPTS} -Dlog4j.configuration=file:${CONFLUENT_HOME}/properties/control-center-log4j.properties"
export CONTROL_CENTER_LOG4J_OPTS
######################################################################
### check current user
CURRENT_USER="$(id -un)"
if [ "${CURRENT_USER}" = "root" ]; then
echo "[ERROR] The current user is root!"
exit
fi
### check running process
PID="$(pgrep -xa java | grep ${PROPERTIES_FILE} | grep {{server_name}} | awk '{print $1}')"
if [ -n "${PID}" ]; then
echo "[ERROR] The {{server_name}} (pid ${PID}) is already running!"
exit
fi
### create data and log dirs
if [ ! -d "${DATA_DIR}" ]; then
mkdir -p ${DATA_DIR}
fi
if [ ! -d "${LOG_DIR}" ]; then
mkdir -p ${LOG_DIR}
fi
nohup ${CONFLUENT_HOME}/bin/control-center-start ${PROPERTIES_FILE} 1> ./ccc.log 2>&1 &